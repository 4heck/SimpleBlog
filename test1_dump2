--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.10
-- Dumped by pg_dump version 9.6.10

-- Started on 2018-12-17 23:33:56

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 1 (class 3079 OID 12387)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2165 (class 0 OID 0)
-- Dependencies: 1
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 187 (class 1259 OID 16480)
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: UserOne
--

CREATE TABLE public.alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE public.alembic_version OWNER TO "UserOne";

--
-- TOC entry 186 (class 1259 OID 16469)
-- Name: post; Type: TABLE; Schema: public; Owner: UserOne
--

CREATE TABLE public.post (
    id integer NOT NULL,
    title character varying(140),
    slug character varying(140),
    body text,
    created timestamp without time zone
);


ALTER TABLE public.post OWNER TO "UserOne";

--
-- TOC entry 185 (class 1259 OID 16467)
-- Name: post_id_seq; Type: SEQUENCE; Schema: public; Owner: UserOne
--

CREATE SEQUENCE public.post_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.post_id_seq OWNER TO "UserOne";

--
-- TOC entry 2166 (class 0 OID 0)
-- Dependencies: 185
-- Name: post_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: UserOne
--

ALTER SEQUENCE public.post_id_seq OWNED BY public.post.id;


--
-- TOC entry 190 (class 1259 OID 16493)
-- Name: post_tags; Type: TABLE; Schema: public; Owner: UserOne
--

CREATE TABLE public.post_tags (
    post_id integer,
    tag_id integer
);


ALTER TABLE public.post_tags OWNER TO "UserOne";

--
-- TOC entry 189 (class 1259 OID 16487)
-- Name: tag; Type: TABLE; Schema: public; Owner: UserOne
--

CREATE TABLE public.tag (
    id integer NOT NULL,
    name character varying(100),
    slug character varying(100)
);


ALTER TABLE public.tag OWNER TO "UserOne";

--
-- TOC entry 188 (class 1259 OID 16485)
-- Name: tag_id_seq; Type: SEQUENCE; Schema: public; Owner: UserOne
--

CREATE SEQUENCE public.tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tag_id_seq OWNER TO "UserOne";

--
-- TOC entry 2167 (class 0 OID 0)
-- Dependencies: 188
-- Name: tag_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: UserOne
--

ALTER SEQUENCE public.tag_id_seq OWNED BY public.tag.id;


--
-- TOC entry 191 (class 1259 OID 17083)
-- Name: user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."user" (
    id integer NOT NULL,
    name "char",
    surname "char",
    city "char",
    email "char",
    created_account timestamp with time zone
);


ALTER TABLE public."user" OWNER TO postgres;

--
-- TOC entry 2020 (class 2604 OID 16472)
-- Name: post id; Type: DEFAULT; Schema: public; Owner: UserOne
--

ALTER TABLE ONLY public.post ALTER COLUMN id SET DEFAULT nextval('public.post_id_seq'::regclass);


--
-- TOC entry 2021 (class 2604 OID 16490)
-- Name: tag id; Type: DEFAULT; Schema: public; Owner: UserOne
--

ALTER TABLE ONLY public.tag ALTER COLUMN id SET DEFAULT nextval('public.tag_id_seq'::regclass);


--
-- TOC entry 2153 (class 0 OID 16480)
-- Dependencies: 187
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: public; Owner: UserOne
--

COPY public.alembic_version (version_num) FROM stdin;
fe208550f61b
\.


--
-- TOC entry 2152 (class 0 OID 16469)
-- Dependencies: 186
-- Data for Name: post; Type: TABLE DATA; Schema: public; Owner: UserOne
--

COPY public.post (id, title, slug, body, created) FROM stdin;
3	Как оформить ИП?	kak-oformit-ip	Зачем и для кого существует трудовой кодекс?\n\nРади интереса почитайте воспоминания людей, живших в конце XIX — начале XX века о только зарождавшемся тогда рабочем классе. Рабочий день по 14 часов, бесправие, насилие со стороны владельцев предприятий. Трудовой кодекс был разработан гораздо позже, но основной его задачей было упорядочить взаимоотношения работодателя и сотрудника в индустриальном мире. Он ориентирован на физический и даже отчасти на умственный труд, где производительность оценивается часами смены.\n\nВ отношениях по ТК хорошо себя чувствуют секретари, водители, работники промышленности. Однако как только речь заходит о творческих, научных изысканиях или ИТ, где границы рабочего дня размыты, а квалифицированных сотрудников не хватает, приходится от ТК отступать, формируя какие-то условные договоренности: “Мы сделаем вот так, хотя по ТК не обязаны, а гарантией этого будут наши добрые взаимоотношения”.\n\nРазве ТК РФ предусматривает ДМС, оплату фитнеса, кофе и снеки в офисе? Нет. Это прописывается в отдельных соглашениях, а зачастую остается просто на словах между работодателем и сотрудником. Однако последний вполне привыкает к этому положению дел, считая все эти “плюшки” обязательным элементом сотрудничества. В итоге есть ТК, есть должностная инструкция, а есть — реальное положение вещей, которое может радикально отличаться.\n\nСлышали об “итальянских забастовках”? На мой взгляд, успех этих мероприятий в “приструнении” работодателей как раз подтверждает мои слова.\n\nУдаленная работа и ТК\n\nЕще сложнее ситуация с удаленной работой. Формально дистанционная (или надомная) работа у нас существует. Но работодатели, которым потом никак не уволить сотрудника, не выполняющего взятые обязательства, неохотно на нее идут. А если и идут, то через максимальную стандартизацию.\n\nМне доводилось работать по такой схеме. Не знаю, как идея кадрового оформления дистанционной работы была изначально задумана, но по факту ты вообще никак не влияешь на условия, прописанные в документах, которые присылают на подпись. У организации есть типовая форма, а ты должен с ней просто согласиться и никаких поправок внести не можешь: либо все оговорки остаются только на словах, либо в изменении процессов просто отказывают. Возможно, это мне так не везло.\n\nНа мой взгляд, схема с дистанционной работой хорошо работает только там, где есть “сильный” кадровый отдел, который хорошо (за счет собственных стремлений к прогрессу) выстраивает процессы, касающиеся использования каких-нибудь электронных подписей, актуализации трудовых договоров и т.п. Лично с таким не сталкивался ни разу.\n\nПри чем тут ИП?\n\nКак только мы заговариваем о том, как бы нам упростить эти устные договоренности и непонятные условия дистанционной работы, переложив все на бумагу, неизбежно всплывает тема ИП. На самом деле всплывает вообще тема взаимодействия ИП или юридических лиц, но, как писал выше, более «хитрые» ООО и ЗАО не рассматриваю.\n\nРаботая в офисе, ИТ-шники давным давно пользуются так называемой “предпринимательской свободой”, и привыкли к этому. Это уже не работники “у станка”. Они скорее сами поставят условия работодателю (“уйду за сутки до релиза!”), чем останутся бесправными и незащищенными. Большинство ИТ-шников продает свое время за деньги, так и оценивая свой труд в часах. Многие даже вполне свободно регулируют эти часы: «Сегодня приду на час позже, завтра отработаю». А соответствует ли это должностной инструкции?\n\nЯ считаю, что ИП и договор возмездного оказания услуг (выполнения работ) — единственный способ прописать реальные договоренности на бумаге, а не ставить кучу словесных условий поверх слишком уж общих ТК, должностной инструкции и т.п.\n\nСерая схема или белая?\n\nОчень часто я вижу замечания относительно того, что схема с ИП — есть серый уход от налогов недобросовестного работодателя. \n\nНа мой взгляд, при работе в офисе еще можно подискутировать относительно природы взаимоотношений разработчика и нанявшей его конторы. Но если речь идет об удаленке, все очевидно — это предпринимательство. Исполнитель (ИП) сам определяет свой график, разворачивает и поддерживает рабочее место, подключение к интернету и т.п. Это оказание почасовых услуг. И в актах потом фигурируют часы, которых не обязательно должно быть “40 в неделю”. Я могу отработать 36, и никого не будет волновать, что я делал еще 4 часа. Может на диване лежал. А может оказывал услуги кому-то другому.\n\nМне кажется, этот шум вокруг “серости” ИП-шной схемы вызван исключительно тем, что денежные вопросы всегда пробуждают у людей некую паранойю. Это нормально. Но надо отделять слухи и мнения от объективных данных. В нашей стране нет закона, запрещающего ИП работать только с одним партнером.\n\nТак ли страшен статус ИП?\n\nВокруг ИП осталось какое-то нездоровое количество предрассудков из 90-х. Хотя на мой взгляд, это вполне логичная ступень развития вчерашнего “наемного работника”. Ты начинаешь понимать, что выполняя поставленную задачу, нужно защищать не только интересы “работодателя”. Нужно заботиться о своем имени, о корректности заполняемых документов, о том, чтобы в договорах была прописана реальная ситуация, а не мифическая. Ты начинаешь читать все, что подписываешь, до последней буквы, даже акт о приемке продуктов от службы доставки. Понимаешь, что даже рутина дает тебе “+1” к личному профессиональному бренду. А разыскивая нового партнера, применяешь все те же механизмы маркетинга, что малый и средний бизнес в поиске клиентов.\n\nЕдинственным существенным барьером на сегодняшний день остаются отказы в кредитах ИП-шникам. Но во-первых, ситуация становится проще — один из банков недавно вполне осознанно выдал довольно масштабный потребительский кредит знакомому ИП-шнику вообще без кредитной истории (правда, доходы ИП-шнику приходили на счет в этом же банке).\n\nИ если так уж приперло взять большой кредит, вроде ипотеки, эту “особенность” системы можно “обойти” через официальное трудоустройство. Пошел работать по ТК, проработал положенные 3 — 6 месяцев, взял ипотеку и уволился снова на ИП-шные хлеба. Вряд ли такую схему придется проворачивать очень часто — квартиры и дома покупаются не каждый день.\n\nА что с бюрократией?\n\nСчитается, что работа через ИП связана с большим объемом бюрократии, которую придется вести самому или нанимать бухгалтера (а это деньги, сложности с поиском и т.п.). Это не так. \nСегодня ИП можно открыть чуть ли не удаленно, например, обратившись в банк, чей представитель сам приедет на встречу, чтобы изучить оригиналы документов (не буду называть конкретных явок, чтобы не сочли рекламой). Я так и оформлялся. Работая из города за несколько тысяч километров от места прописки, просто заплатил за совершенно легальный посреднический сервис. Это было намного дешевле билета на самолет туда-обратно. Кстати, идея, что тем самым я привязал себя к определенному банку навечно, — лишь иллюзия, потому что потом я вполне успешно перевел свой счет в другой банк, где открыта личная дебетовая карта.\n\nСамое сложное, на мой взгляд, — составить договора со всеми контрагентами. Но зачастую у них есть свои формы, которые надо просто внимательно изучить (также внимательно стоит читать и договор о трудоустройстве по ТК — тут никакой разницы). В отличие от договора о дистанционной работе туда вполне можно вносить изменения, если что-то прописано не так, как есть на самом деле. А со временем я даже составил из разных попавших ко мне в руки договоров собственную форму, чтобы было проще начинать общаться с новыми заказчиками.\nДальнейшая работа зависит от того, как договориться и отразить это в договоре. В моем случае с каждым из контрагентов раз в месяц надо оформить допсоглашение к договору, прописав там стоимость выполненных за данный период работ, а потом выставить счет и составить по итогам акт. Три бумажки, две из которых можно сделать прямо в интерфейсе онлайн банка. А допсоглашение после обсуждения формы легко составляется по шаблону (подставляя новые цифры). Если партнер это поддерживает, вместо того, чтобы каждый раз бегать на почту, можно получить ЭЦП и весь документооборот можно перевести в электронный вид.\n\nДа, ты должен сам вести свои налоги. На ИП уже нет “доброго дяди” или “тети” из бухгалтерии или кадровой службы, которые оформят все документы за тебя. Зато есть онлайн сервисы. И, честно говоря, бухгалтеры контрагентов на начальном этапе ни разу не отказывали мне в помощи по оформлению отношений именно с их компанией — это в их же интересах.\n\nЭто снова разговор об ответственности. Многие на Хабре как-то негативно высказываются об экономистах и кадровиках. Но мы же доверяем именно этим людям платить за нас налоги и отчисления в фонды при работе по ТК. А мы им достаточно для этого доверяем? Честно говоря, себе я доверяю больше.\n\nМне сложно вникнуть в детали законодательства и постоянно обновляющихся требований, указаний и разъяснительных писем, касающихся работы ИП. Даже если “от корки до корки” читаю все законы, остается ощущение, что оно может работать не так, как я понял — система самопротиворечива. Однако сейчас есть масса мест, где можно получить консультацию, чтобы разобраться. Все уважающие себя банки предлагают сервис онлайн бухгалтерии, и для типичных ситуаций стоит он совсем недорого. В итоге подача “страшной и ужасной налоговой декларации” сводится к нажатию пары кнопок в интерфейсе. Т.е. бюрократия-то есть, но она уже не так масштабна, как в “до-интернетовское” время.\n\nИП выигрывает у трудоустройства по ТК в том, что вся эта бюрократия имеет непосредственное отношение к реальности. Договорились — прописали в договоре. \n\nА при работе по ТК кто-нибудь когда-нибудь видел должностную инструкцию разработчика Haskell (для примера)? Думаю, нет. Максимум, что вы увидите в отделе кадров — какую-нибудь типовую форму “должностная инструкция разработчика” со стандартным стеком технологий, в лучшем случае с разделением по уровням — junior, middle, senior. Никто не будет там прописывать реальные детали работы, потому что это бессмысленно: все меняется слишком быстро, чтобы параллельно с обновлением самих технологий в компании заниматься постоянными правками документации в кадровом отделе.\n\nДеньги и соцгарантии\n\nПока я нигде не упомянул, что ИП — это еще и выгодно в деньгах. При этом все происходит совершенно легально: я оплачиваю взносы в фонды и УСН 6% с учетом вычета. В некоторых регионах и на этом, кстати, можно сэкономить через переход на патент. Сам я, правда, такой подход не пробовал. Где-то есть и налоговые каникулы (для некоторых ОКВЭДов). Социальные гарантии от государства таким образом не страдают. Это как минимум честнее работы “в черную”. А при каком-то стечении обстоятельств может стать еще и выгоднее (обсуждался тут недавно штраф для безработных… пруфлинк). \n\nСоциальные гарантии от работодателя (ДМС, фитнес и прочее) в этой схеме, конечно, по умолчанию отсутствуют. Но во-первых, никто не запрещает прописать их в договоре, если это так уж важно. А во-вторых, начиная воспринимать работодателя не как “доброго дядю, у которого надо отжать побольше зарплату”, а как партнера по делу, ты понимаешь, что все эти “плюшки” оплачиваются из средств, которые могли бы пойти тебе в доход. Не лучше ли получить их на счет и самому распоряжаться, например, купив себе хорошие кроссовки для бега по парку, вместо оплаты душного зала? Слышал, что некоторые компании, работающие с ИП-шниками, так и делают: раз в год выделяют суммы на некий соцпакет, сверх оговоренной в документах стоимости часа. И это здорово.\n\nК некоторым гарантиям зачастую присоединяют и защиту со стороны ТК, который, например, запрещает увольнять сотрудников без веской причины. Но, во-первых, на Хабре не так давно уже обсуждалось, что существует 1000 и один способ убрать неугодную персону из коллектива. Тут не важно, по какому принципу собран этот коллектив — по ТК или это равноправные партнеры с ИП. В таких ситуациях проще уйти и оставить это болото копошиться в своем соку.\nВо-вторых, предположим, вас действительно пытаются “уволить” (разорвать договор в терминах ИП). По трудовому кодексу вы можете отсудить восстановление в должности — и такие прецеденты были. Но захотите ли вы работать в таком коллективе, где от вас хотели просто избавиться без явных на то причин? Я вот, если честно, нет. Даже если в такой компании ты восстановишься по суду, проигравшая сторона всегда может создать те самые “нерабочие отношения”.\n\nА в нормальной ситуации, вне зависимости от способа оформления отношений, заказчик (работодатель) не заинтересован в том, чтобы хорошего исполнителя (работника) что-то не устраивало. И если тому нужен отпуск по семейным обстоятельствам — до того, что он готов шлепнуть условным заявлением об увольнении на стол, если такой отпуск не будет предоставлен — это решается путем переговоров. Нормальный заказчик совсем не хочет потерять хорошего исполнителя из-за таких мелочей.\n\nЕще один острый вопрос — пенсия. Но как я уже упоминал, будучи ИП, я плачу за себя все предписанные отчисления в фонды. А имея чуть больший заработок, чем в среднем на моей должности, я могу этот “сверхдоход” пустить на инвестиции в будущее — купить себе нормальное жилье, дать хорошее образование детям, инвестировать в консервативные или даже активно развивающиеся направления экономики. Могу даже в матрас их сложить (условно). Снова мы приходим к вопросу ответственности: я осознанно беру на себя ответственность за свою старость, не полагаясь на некие фонды — государственные или не очень — а формируя собственный “пакет” инвестиций в будущее, который мне кажется адекватным. И, что самое главное, я точно знаю, что эту часть моих инвестиций никто не может без моего ведома реструктурировать так, чтобы покрыть какие-то недостачи.	2018-11-18 03:11:33.152937
1	Как пересесть с Python на Java	how-to-fuck-java	JPython представляет собой последнюю вышедшую версию Python, написанную на Java Джимом Хьюдженином. Сообщества Python и Java очень заинтересованы разработкой JPython. Пользователи Python рады возможности перенести свои сегодняшние знания по языку Python в основанные на Java среды разработки, а программисты Java - что могут использовать скриптовый язык Python в своих Java-системах для тестирования библиотек и изучения Java-библиотек из интерпретируемой среды.\n\nJPython можно получить на http://www.python.org/jpython с лицензией и условиями распространения, аналогичными имеющимся для CPython (который часто сравнивают с JPython).\n\nJPyhon содержит несколько элементов:\n\njpython, являющийся эквивалентом программы на Python, использующийся на протяжении всей книги.\njpythonc, перекомпилирующий программу на JPython в файлы классов Java. Полученные в результате файлы классов Java могут использоваться как любые другие файлы классов Java, например, как апплеты, сервлеты или beans.\nНабор модулей, обеспечивающий пользователей JPython подавляющим большинством модулей из стандартной библиотеки Python.\nНесколько программ, демонстрирующих различные аспекты программирования на JPython.\nИспользование JPython во многом сходно с использованием Python:\n\n~/book> jpython\nJPython 1.0.3 on java1.2beta4\nCopyright 1997-1998 Corporation for National Research Initiatives\n>>> 2 + 3\n5\n\nНа самом деле, JPython работает почти идентично CPython. Для своевременного отслеживания отличий между двумя реализациями см. http://www.python.org/jpython/differences.html. Важнейшими различиями являются следующие:\nJPython пока еще медленнее, чем CPython. То, насколько он медленнее, во многом зависит от использованного тестового кода и от Виртуальной Машины Java, которую использует JPython. С другой стороны, автор JPython сделал ряд многообещающих оптимизаций, которые могут сделать будущие версии JPython такими же или даже более быстрыми, чем CPython.\nНекоторые из встроенных или библиотечных модулей недоступны для JPython. Например, до сих пор не реализован вызов os.system(), поскольку сделать это достаточно трудно, учитывая взаимодействие Java с лежащей в ее основе операционной системой. Кроме того, некоторые из наиболее крупных модулей расширения (таких, как среда Tkinter GUI framework) отсутствуют, так как в Java не существует средств, лежащих в их основе (набора инструментов Tk/Tcl toolkit в случае Tkinter).	2018-11-18 03:11:33.152937
2	Что такое JDBC?	what-a-jdbc	Здравствуйте! В этой статье я напишу простой пример соединения с базами данных на Java.Эта статья предназначена новичкам.Здесь я опишу каждую строчку объясню что зачем.\n\nНо для начала немного теории.\n\nJDBC (Java DataBase Connectivity — соединение с базами данных на Java) предназначен для взаимодействия Java-приложения с различными системами управления базами данных (СУБД). Всё движение в JDBC основано на драйверах которые указываются специально описанным URL.\n\nА теперь практика.\n\nДля начала создаём maven проект и в pom.xml помещаем зависимость для соединения с СУБД (В моём случае СУБД будет выступать MySQL): <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->\n    <dependencies>\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>5.1.38</version>\n        </dependency>\n    </dependencies>Username по умолчанию root.Password вы должны знать сами.\n\nПосле с помощью строчки Class.forName(«com.mysql.jdbc.Driver») регестрируем драйвера. Дальше устанавливаем соединение с помощью DriverManager.getConnection (ваш url, username, password).\n\nПосле с помощью connection (соединения) создаём простой запрос Statement методом createStatement().\n\nДальше создаём экземпляр класса ResultSet и формируем запрос через statement методом executeQuery (запрос).\n\nДальше мы заставляем пробежаться resultSet по всей базе данных и вывести то что нам нужно. Так с помощью объекта resultSet и его методов (getString,getInt и т.д. в зависимости от типа переменных в колонке) мы выводим.Так как мой запрос был для того что бы вывести всё, мы можем вывести любую колонку.\n\nПосле закрываем resultSet,statement и connection (именно в такой последовательности). В процессе он будет показывать ошибки так как будет запрашивать обработку исключений в catch.Так что пишите catch заранее.\n\nТеперь когда практика есть на неё можно наложить более глубокую теорию.Тема правда очень большая, желаю удачи в её изучении.	2018-11-18 03:11:33.152937
8	Test Post	Test-Post	Body of Test Post	2018-11-29 15:34:56.778643
10	Test Post2	Test-Post2	ц122	2018-11-29 16:29:34.273137
11	lada 23 3ef dfrgft---	lada-23-3ef-dfrgft---	wer5uj6i78ko	2018-11-29 16:29:34.273137
12	w	w	w	2018-11-29 23:07:33.051907
13	2	2	2	2018-11-29 23:47:24.958469
14	3	3	3	2018-11-29 23:47:24.958469
17	wqd	wqd	qwdqw	2018-11-30 00:00:04.218009
19	wqda	wqda	qwdqw	2018-11-30 00:01:21.121364
21	3qq	3qq	3	2018-11-30 00:06:36.937181
23	edfr	edfr	rgrgh	2018-11-30 15:39:49.743142
24	111w	111w	w23	2018-11-30 16:54:46.780217
\.


--
-- TOC entry 2168 (class 0 OID 0)
-- Dependencies: 185
-- Name: post_id_seq; Type: SEQUENCE SET; Schema: public; Owner: UserOne
--

SELECT pg_catalog.setval('public.post_id_seq', 26, true);


--
-- TOC entry 2156 (class 0 OID 16493)
-- Dependencies: 190
-- Data for Name: post_tags; Type: TABLE DATA; Schema: public; Owner: UserOne
--

COPY public.post_tags (post_id, tag_id) FROM stdin;
1	2
1	1
2	2
2	3
3	5
\.


--
-- TOC entry 2155 (class 0 OID 16487)
-- Dependencies: 189
-- Data for Name: tag; Type: TABLE DATA; Schema: public; Owner: UserOne
--

COPY public.tag (id, name, slug) FROM stdin;
1	python	python
2	java	java
3	PostgeSQL	postgesql
4	Django	django
5	Разное	other
\.


--
-- TOC entry 2169 (class 0 OID 0)
-- Dependencies: 188
-- Name: tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: UserOne
--

SELECT pg_catalog.setval('public.tag_id_seq', 6, true);


--
-- TOC entry 2157 (class 0 OID 17083)
-- Dependencies: 191
-- Data for Name: user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."user" (id, name, surname, city, email, created_account) FROM stdin;
1	R	M	M	m	\N
2	n	s	\N	\N	2018-12-04 19:50:10.54296+03
4	J	S	\N	\N	2018-12-04 20:27:45.017977+03
\.


--
-- TOC entry 2027 (class 2606 OID 16484)
-- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: public; Owner: UserOne
--

ALTER TABLE ONLY public.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- TOC entry 2023 (class 2606 OID 16477)
-- Name: post post_pkey; Type: CONSTRAINT; Schema: public; Owner: UserOne
--

ALTER TABLE ONLY public.post
    ADD CONSTRAINT post_pkey PRIMARY KEY (id);


--
-- TOC entry 2025 (class 2606 OID 16479)
-- Name: post post_slug_key; Type: CONSTRAINT; Schema: public; Owner: UserOne
--

ALTER TABLE ONLY public.post
    ADD CONSTRAINT post_slug_key UNIQUE (slug);


--
-- TOC entry 2029 (class 2606 OID 16492)
-- Name: tag tag_pkey; Type: CONSTRAINT; Schema: public; Owner: UserOne
--

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_pkey PRIMARY KEY (id);


--
-- TOC entry 2031 (class 2606 OID 17087)
-- Name: user users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- TOC entry 2032 (class 2606 OID 16496)
-- Name: post_tags post_tags_post_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: UserOne
--

ALTER TABLE ONLY public.post_tags
    ADD CONSTRAINT post_tags_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.post(id);


--
-- TOC entry 2033 (class 2606 OID 16501)
-- Name: post_tags post_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: UserOne
--

ALTER TABLE ONLY public.post_tags
    ADD CONSTRAINT post_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tag(id);


-- Completed on 2018-12-17 23:33:56

--
-- PostgreSQL database dump complete
--

